1. Quais s√£o os principais desafios ao implementar uma regress√£o linear "pura" em Rust?
Sem bibliotecas externas: Tudo precisa ser feito manualmente ‚Äî soma, m√©dia, vari√¢ncia, etc.

Gerenciamento de erros e seguran√ßa de tipos: Rust √© r√≠gido quanto a tipos, e exige lidar com poss√≠veis erros de forma expl√≠cita.

Precis√£o num√©rica: Opera√ß√µes com f64 podem acumular erros, principalmente com grandes volumes de dados.

Curva de aprendizado: Comparado a Python ou R, Rust √© mais verboso e exige mais conhecimento de baixo n√≠vel.

2. Como lidar com entradas inv√°lidas (por exemplo, array vazio) na fun√ß√£o de regress√£o linear?
Deve-se validar a entrada antes de realizar os c√°lculos:

rust
Copiar
Editar
if data.len() < 2 {
    panic!("Erro: a s√©rie temporal precisa de pelo menos 2 pontos.");
}
Alternativa mais elegante: retornar Result<Self, String> para evitar panic!:

rust
Copiar
Editar
pub fn fit(data: &[f64]) -> Result<Self, String> { ... }

3. Quais s√£o as vantagens e desvantagens de utilizar Rust para implementar algoritmos num√©ricos?
‚úÖ Vantagens:

Alto desempenho compar√°vel ao C/C++

Seguran√ßa de mem√≥ria (sem ponteiros nulos ou vazamentos)

Paralelismo seguro com rayon ou tokio

Boa integra√ß√£o com WebAssembly (ideal para deploy web)

‚ö†Ô∏è Desvantagens:

Falta de bibliotecas estat√≠sticas maduras (comparado a Python)

Verbosidade e complexidade para tarefas simples

Curva de aprendizado maior

4. Como os testes unit√°rios podem garantir a qualidade da fun√ß√£o de regress√£o linear?
Garantem que os coeficientes est√£o corretos com dados simples (ex: y = 2x + 1)

Validam se MSE e R¬≤ se comportam como esperado

Detectam regress√µes (erros que surgem ao modificar o c√≥digo)

Ajudam a manter a confian√ßa ao refatorar

Exemplo:

rust
Copiar
Editar
assert!((model.r_squared(&data) - 1.0).abs() < 1e-6);
5. Qual a import√¢ncia de uma documenta√ß√£o clara e completa para o projeto?
Facilita o uso e manuten√ß√£o do c√≥digo

Ajuda outros desenvolvedores a entenderem como utilizar o m√≥dulo

Reduz a necessidade de suporte t√©cnico

Permite gera√ß√£o autom√°tica de documenta√ß√£o com cargo doc

6. Como a regress√£o linear pode ser utilizada para realizar previs√µes em s√©ries temporais?
Considera a posi√ß√£o no tempo (x = √≠ndice) como vari√°vel independente

Estima a tend√™ncia linear dos dados

Pode prever valores futuros com:

rust
Copiar
Editar
y = slope * x + intercept
Ideal quando h√° uma tend√™ncia linear est√°vel.

7. Quais s√£o as limita√ß√µes da regress√£o linear e quando ela pode n√£o ser o modelo mais adequado?
‚ö†Ô∏è Limita√ß√µes:

S√≥ modela rela√ß√µes lineares

√â sens√≠vel a outliers

N√£o lida bem com sazonalidade, ciclos ou n√£o-linearidades

Sup√µe vari√¢ncia constante (homocedasticidade)

üß† N√£o √© adequada quando:

A rela√ß√£o entre vari√°veis n√£o √© linear

H√° muitos ru√≠dos ou padr√µes complexos (ex: dados financeiros)

Modelos como ARIMA, redes neurais ou regress√£o polinomial s√£o mais apropriados

8. Como as m√©tricas de avalia√ß√£o podem ajudar a determinar a qualidade da regress√£o linear?
R¬≤ (Coeficiente de Determina√ß√£o):

Mede o quanto da varia√ß√£o dos dados √© explicada pelo modelo

Varia de 0 a 1 (quanto mais perto de 1, melhor)

MSE (Erro Quadr√°tico M√©dio):

Mede o erro m√©dio entre valores reais e previstos

Quanto menor, melhor o ajuste

Essas m√©tricas ajudam a responder:

O modelo est√° representando bem os dados?

√â confi√°vel usar para previs√£o?

Comparado a outros modelos, esse tem melhor desempenho?